package blr.dany.telegramservice.service.impl;

import blr.dany.telegramservice.MeteoGenieBot;
import blr.dany.telegramservice.feign.UserServiceClient;
import blr.dany.telegramservice.feign.response.KafkaAlert;
import blr.dany.telegramservice.feign.response.TelegramUser;
import blr.dany.telegramservice.service.AlertSenderService;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;

import java.util.List;

@Service
@RequiredArgsConstructor
@Slf4j
public class AlertSenderServiceImpl implements AlertSenderService {

    private final MeteoGenieBot bot;
    private final UserServiceClient userServiceClient;



    @Override
    public void sendMessage(KafkaAlert alert) {
        List<TelegramUser> users = userServiceClient.getUsersBySubAndCountry(true, alert.getCity()).getBody();
        for (TelegramUser user : users) {
            String message = String.format("""
        ‚ö†Ô∏è <b>–ü–æ–≥–æ–¥–Ω–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ</b>
        
        üìç –ì–æ—Ä–æ–¥: <b>%s</b>
        üìÖ –î–∞—Ç–∞: <b>%s</b>
        
        üìù –ü—Ä–∏—á–∏–Ω–∞: <i>%s</i>
        
        –ë—É–¥—å—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã –∏ —Å–ª–µ–¥–∏—Ç–µ –∑–∞ –ø—Ä–æ–≥–Ω–æ–∑–æ–º!
        """,
                    alert.getCity(),
                    alert.getForecastDayResponse().getDate(),
                    alert.getMessage()
            );
            SendMessage sendMessage = new SendMessage();
            sendMessage.setChatId(user.getChatId());
            sendMessage.setParseMode("HTML");
            sendMessage.setText(message);
            try {
                bot.execute(sendMessage);
            } catch (TelegramApiException e) {
                log.warn("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–ª–µ—Ä—Ç–∞");
                throw new RuntimeException(e);
            }
        }
    }
}
